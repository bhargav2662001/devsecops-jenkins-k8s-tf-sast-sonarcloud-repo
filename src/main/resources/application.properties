server.port=8081
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=system
spring.datasource.password=1234
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect


logging.level.org.hibernate.SQL=DEBUG
server.error.include-stacktrace=always

# Generate primary key values automatically using database identity column
spring.jpa.hibernate.use-new-id-generator-mappings = true
spring.jpa.properties.hibernate.id.new_generator_mappings=true
# JWT Configuration
jwt.secret=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=b53767183@gmail.com
spring.mail.password=kcgcmcjydxwinvgs
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Spring Boot CORS settings for all origins without credentials
spring.web.cors.allowed-origins=http://localhost:4200
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
#spring.web.cors.allow-credentials=true  # Comment this out if you need to allow any origin with credentials